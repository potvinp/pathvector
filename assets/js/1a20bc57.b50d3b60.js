"use strict";(self.webpackChunkpathvector_io=self.webpackChunkpathvector_io||[]).push([[468],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||f[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={title:"CLI Usage",sidebar_position:6},a="Usage",c={unversionedId:"cli",id:"cli",title:"CLI Usage",description:"",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/cli",draft:!1,editUrl:"https://github.com/natesales/pathvector/edit/main/docs/docs/cli.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"CLI Usage",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Snippets",permalink:"/docs/snippets"},next:{title:"Interactive CLI",permalink:"/docs/interactive"}},l={},s=[],p={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Pathvector is a declarative edge routing platform that automates route optimization and control plane configuration with secure and repeatable routing policy.\n\nUsage:\n  pathvector [command]\n\nAvailable Commands:\n  birdsh      Lightweight BIRD shell\n  completion  Generate the autocompletion script for the specified shell\n  config      Export configuration, optionally sanitized with logknife\n  dump        Dump configuration\n  generate    Generate router configuration\n  help        Help about any command\n  match       Find common IXPs for a given ASN\n  optimizer   Start optimization daemon\n  status      Show protocol status\n  version     Show version information\n\nFlags:\n  -c, --config string   YAML configuration file (default "/etc/pathvector.yml")\n  -d, --dry-run         Don\'t modify configuration\n  -h, --help            help for pathvector\n      --lock string     Lock file (check disabled if empty)\n  -n, --no-configure    Don\'t configure BIRD\n  -t, --trace           Show trace log messages\n  -v, --verbose         Show verbose log messages\n\nUse "pathvector [command] --help" for more information about a command.\n')))}f.isMDXComponent=!0}}]);