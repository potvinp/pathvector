"use strict";(self.webpackChunkpathvector_io=self.webpackChunkpathvector_io||[]).push([[856],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),m=o,d=s["".concat(p,".").concat(m)]||s[m]||g[m]||i;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:7},a="Plugins",l={unversionedId:"plugins",id:"plugins",title:"Plugins",description:"Pathvector can be extended with plugins. Plugins follow the github.com/natesales/pathvector/pkg/plugin.Plugin interface.",source:"@site/docs/plugins.md",sourceDirName:".",slug:"/plugins",permalink:"/docs/plugins",draft:!1,editUrl:"https://github.com/natesales/pathvector/edit/main/docs/docs/plugins.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Interactive CLI",permalink:"/docs/interactive"},next:{title:"Support",permalink:"/docs/support"}},p={},c=[{value:"Example",id:"example",level:2}],u={toc:c},s="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(s,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"plugins"},"Plugins"),(0,o.kt)("p",null,"Pathvector can be extended with plugins. Plugins follow the ",(0,o.kt)("inlineCode",{parentName:"p"},"github.com/natesales/pathvector/pkg/plugin.Plugin")," interface."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Create a new plugin package\nmkdir /tmp/example-plugin\ncd /tmp/example-plugin\ngo mod init example.com/plugin\n# Write your plugin...\ncd ..\ngit clone https://github.com/natesales/pathvector\ncd pathvector\necho 'helloworld:example.com/plugin' >> plugin.cfg # Add the plugin's name and package path to Pathvector's plugin config\n./plugin-generate.py\ngo build\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="main.go"',title:'"main.go"'},'package main\n\nimport (\n    "fmt"\n\n    "github.com/spf13/cobra"\n\n    "github.com/natesales/pathvector/pkg/config"\n    "github.com/natesales/pathvector/pkg/plugin"\n)\n\ntype Plugin struct{}\nvar _ plugin.Plugin = (*Plugin)(nil)\n\nfunc (g *Plugin) Description() string {\n    return "An example plugin"\n}\n\nfunc (g *Plugin) Version() string {\n    return "1.0.0"\n}\n\nfunc (g *Plugin) Command() *cobra.Command {\n    return &cobra.Command{\n        Use:   "hello",\n        Short: "Show hello world",\n        Run: func(cmd *cobra.Command, args []string) {\n            fmt.Println("Hello world from the plugin!")\n        },\n    }\n}\n\nfunc (g *Plugin) Modify(c *config.Config) error {\n    c.Hostname = "hello-world.example.com"\n    return nil\n}\n\nfunc main() {\n    plugin.Register("helloworld", &Plugin{})\n}\n')))}g.isMDXComponent=!0}}]);